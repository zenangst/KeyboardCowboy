on:
  pull_request: {}
permissions:
  contents: read
  pull-requests: write
name: Test
jobs:
  test:
    name: Test
    runs-on: macos-15
    strategy:
        matrix:
          xcode: ['16.4']
    steps:
      - name: Set Xcode ${{ matrix.xcode }}
        run: |
          echo "Available Xcode versions:"
          ls /Applications | grep Xcode
          echo "Choosing Xcode_${{ matrix.xcode }}.app"
          sudo xcode-select -s /Applications/Xcode_${{ matrix.xcode }}.app
          xcodebuild -version
          swift --version
          swift package --version
      - name: Checkout
        uses: actions/checkout@main
        with:
          persist-credentials: false
      - name: Set up environment
        run: |
          touch .env
          echo -e "APP_NAME=Keyboard Cowboy" >> .env
          echo -e "APP_SCHEME=Keyboard-Cowboy" >> .env
          echo -e "APP_BUNDLE_IDENTIFIER=com.zenangst.Keyboard-Cowboy" >> .env
          echo -e "TEAM_ID=XXXXXXXXXX" >> .env
          echo -e "PACKAGE_DEVELOPMENT=false" >> .env
      - name: Install dependencies
        run: |
          brew tap tuist/tuist
          brew install --formula tuist
      - name: Install & Run tuist
        run: |
          tuist clean
          tuist install
          tuist generate
      - name: Run tests
        if: success()
        uses: sersoft-gmbh/xcodebuild-action@v3
        with:
          workspace: "Keyboard Cowboy.xcworkspace"
          scheme: "Keyboard-Cowboy"
          destination: platform=macOS
          action: test
          result-bundle-path: ResultBundle.xcresult
          sdk: macosx
          build-settings: CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED="NO"
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: Test results
          path: ResultBundle.xcresult
      - name: Add comment to PR
        uses: actions/github-script@v6
        if: always()
        with:
          script: |
            const name = process.env.WORKFLOW_NAME;
            const runUrl = `${process.env.REPO_URL}/actions/runs/${process.env.RUN_ID}`;
            const success = process.env.JOB_STATUS === 'success';
            const user = process.env.USER;
            const body = `${name}: ${success ? 'succeeded ✅' : 'failed ❌'}\n${runUrl}\n\n@${user}`;
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            });
        env:
          WORKFLOW_NAME: ${{ github.workflow }}
          REPO_URL: ${{ github.server_url }}/${{ github.repository }}
          RUN_ID: ${{ github.run_id }}
          JOB_STATUS: ${{ job.status }}
          USER: ${{ github.event.pull_request.user.login }}
