on:
  pull_request: {}
name: Test
jobs:
  test:
    name: Test
    runs-on: macos-13
    strategy:
        matrix:
          xcode: ['14.3']
    steps:
      - name: Set Xcode ${{ matrix.xcode }}
        run: |
          echo "Available Xcode versions:"
          ls /Applications | grep Xcode
          echo "Choosing Xcode_${{ matrix.xcode }}.app"
          sudo xcode-select -s /Applications/Xcode_${{ matrix.xcode }}.app
          xcodebuild -version
          swift --version
          swift package --version
      - name: Checkout
        uses: actions/checkout@main
      - name: Install and run tuist
        run: |
          touch .env
          echo "APP_NAME=Keyboard Cowboy" >> .env
          echo -e "APP_SCHEME=Keyboard-Cowboy" >> .env
          echo -e "APP_BUNDLE_IDENTIFIER=com.zenangst.Keyboard-Cowboy" >> .env
          echo -e "TEAM_ID=XXXXXXXXXX" >> .env
          brew install tuist
          tuist fetch
          tuist generate -n
      - name: Build and Test
        run: |
          xcodebuild -workspace Keyboard\ Cowboy.xcworkspace -scheme "Keyboard-Cowboy" -sdk macosx clean build test CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED="NO" -resultBundlePath ResultBundle.xcresult | xcpretty
      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: Test results
          path: ResultBundle.xcresult
